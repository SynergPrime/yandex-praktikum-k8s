apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.servicename }}
  labels:
    app: {{ .Chart.Name }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
            {{- if .Values.useConfigMap }}
            - "/redis-master/redis.conf"
            {{- end }}
          ports:
            - name: {{ .Values.service.ports.name}}
              containerPort: {{ .Values.service.ports.port}}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.ports.name}}
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
             {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
             {{- if .Values.useConfigMap }}
             {{- toYaml .Values.volumeMountsConfigMap | nindent 12 }}
             {{- end }}
             {{- toYaml .Values.volumeMountsData | nindent 12 }}
      volumes:
        - name: data
          emptyDir: {}
        {{- if .Values.useConfigMap }}
        - name: config
          configMap:
            name: {{ .Values.servicename }}
            items:
              - key: redis.conf
                path: redis.conf
        {{- end }}